<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zeng.dao.TeacherMapper">
<!--    结果嵌套查询-->
    <select id="getTeacher" resultMap="TeacherStudent">
        select s.id sid,s.name sname,t.name tname,t.id tid
        from student s , teacher t
        where s.tid = t.id and t.id = #{tid}
    </select>
    <resultMap id="TeacherStudent" type="Teacher">
        <result property="id" column="tid" />
        <result property="name" column="tname" />
<!--
    javaType ：指定数属性的类型
    ofType: 集合中的范型信息
-->
<!--        这边用oftype是因为这个是根据结果嵌套，collection要取出每个结果（按照result），所以用oftype，
            下面另一个按照查询嵌套直接获取整个查询结果，是list，所以用javatype著名==指定list类型，而oftype指定范型信息-->
        <collection property="students" ofType="Student">
            <result property="id" column="sid" />
            <result property="name" column="sname"/>
            <result property="tid" column="tid" />
        </collection>
    </resultMap>


<!--    -=================================================-->

    <select id="getTeacher2" resultMap="TeacherStudent2">
        select * from mybatis.teacher where id =#{tid}
    </select>
    <resultMap id="TeacherStudent2" type="Teacher">
<!--        <result property="id" column="id" />-->
<!--        <result property="name" column="name" />-->
<!--        按照查询嵌套直接获取整个查询结果，是list，所以用javatype著名==指定list类型，而oftype指定范型信息-->
        <collection property="students" javaType="ArrayList" ofType="Student" select="getStudentByTeacherID" column="id"/>

    </resultMap>

    <select id="getStudentByTeacherID" resultType="Student" >
        select * from mybatis.student where tid = #{tid}
    </select>
</mapper>